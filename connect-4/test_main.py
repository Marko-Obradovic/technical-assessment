import pytest
from main import check_win, check_diagonal_win

def test_win_horizontally():
    assert check_win([["X","X","X","X","",""],
                      ["","","","","",""], 
                      [".",".","","","",""], 
                      [".",".",".",".",".","."],
                      [".",".",".",".",".","."],
                      [".",".",".",".",".","."],
                      [".",".",".",".",".","."]]) == True 


def test_lose_horizontally():
    assert check_win([["X","X",".","X",".","."],
                      [".",".",".",".",".","."], 
                      [".",".",".",".",".","."], 
                      [".",".",".",".",".","."],
                      [".",".",".",".",".","."],
                      [".",".",".",".",".","."],
                      [".",".",".",".",".","."]]) == False 


def test_win_vertically():
    assert check_win([["X",".",".",".",".","."],
                      ["X",".",".",".",".","."], 
                      ["X",".",".",".",".","."], 
                      ["X",".",".",".",".","."],
                      [".",".",".",".",".","."],
                      [".",".",".",".",".","."],
                      [".",".",".",".",".","."]]) == True 


def test_lose_vertically():
    assert check_win([["X",".",".",".",".","."],
                      ["X",".",".",".",".","."], 
                      [".",".",".",".",".","."], 
                      ["X",".",".",".",".","."],
                      [".",".",".",".",".","."],
                      [".",".",".",".",".","."],
                      [".",".",".",".",".","."]]) == False 


def test_win_diagonally():
    assert diagonal_win([
        ["O",".",".",".",".","."],
        [".","O",".",".",".","."], 
        [".",".","O",".",".","."], 
        [".",".",".","O",".","."],
        [".",".",".",".",".","."],
        [".",".",".",".",".","."],
        [".",".",".",".",".","."]]) == True


def test_win_diagonally_from_left_side_sandbox():
    assert check_diagonal_win_from_left_side([[".",".",".",".",".","."],
                                              [".",".",".",".",".","."], 
                                              [".",".",".",".",".","."], 
                                              [".",".","O",".",".","."],
                                              [".",".",".","O",".","."],
                                              [".",".",".",".","O","."],
                                              [".",".",".",".","X","O"]]) == True



#def test_win_diagonally_from_left_side_real_game_example():
#    assert check_diagonal_win_from_left_side([[".",".",".",".",".","."],
#                                              [".",".",".",".",".","."], 
#                                              [".",".",".",".",".","."], 
#                                              [".",".","X","O",".","."],
#                                              [".",".","O","X",".","."],
#                                              ["X","O","O","O","X","."],
#                                              ["X","X","X","O","O","X"]]) == True


#def test_win_diagonally_from_left_side_real_game_example():
#    assert check_diagonal_win_from_left_side([
#        [".",".",".",".",".","."],
#        [".",".",".",".",".","."],
#        [".",".",".",".",".","."],
#        [".",".","X",".",".","."],
#        [".",".","X","X",".","."],
#        [".","O","O","O","X","."],
#        ["O","X","O","X","O","X"]]) == True


def test_lose_diagonally_from_left_side():
    assert check_diagonal_win_from_left_side([["O",".",".",".",".","."],
                                              [".",".",".",".",".","."], 
                                              [".",".","O",".",".","."], 
                                              [".",".",".","O",".","."],
                                              [".",".",".",".",".","."],
                                              [".",".",".",".",".","."],
                                              [".",".",".",".",".","."]]) == False


def test_win_diagonally_from_right_side():
    assert check_diagonal_win_from_right_side([[".",".",".",".",".","."],
                                               [".",".",".",".",".","."], 
                                               [".",".",".",".",".","."], 
                                               [".",".",".",".",".","O"],
                                               [".",".",".",".","O","."],
                                               [".",".",".","O",".","."],
                                               [".",".","O",".",".","."]]) == True

def test_win_diagonally_from_right_side_X_blocking_check():
    assert check_diagonal_win_from_right_side([[".",".",".",".",".","."],
                                               [".",".",".",".",".","."], 
                                               [".",".",".",".",".","."], 
                                               [".",".",".",".",".","O"],
                                               [".",".",".",".","O","."],
                                               [".",".",".","O",".","."],
                                               [".","X","O",".",".","."]]) == True

def test_win_diagonally_from_right_side_real_game_example():
    assert check_diagonal_win_from_right_side([[".",".",".",".",".","."],
                                               [".",".",".",".",".","."], 
                                               [".",".",".",".",".","."], 
                                               [".",".",".","X",".","."],
                                               [".",".","X","X",".","."],
                                               [".","X","O","O","O","."],
                                               ["X","O","X","O","X","O"]]) == True

def test_win_diagonally_from_right_side_attempting_to_block_checking_X():
    assert check_diagonal_win_from_right_side([[".",".",".",".",".","."],
                                               [".",".",".",".",".","."], 
                                               [".",".",".",".",".","."], 
                                               [".",".","O","X","O","."],
                                               [".",".","X","X","X","."],
                                               [".","X","O","O","O","."],
                                               ["X","O","X","O","X","O"]]) == True

def test_win_diagonally_from_right_side_full_board():
    assert check_diagonal_win_from_right_side([["O","O","X","O","X","X"],
                                               ["X","X","X","O","O","X"], 
                                               ["O","X","O","X","O","X"], 
                                               ["X","O","O","X","O","O"],
                                               ["X","O","X","X","X","O"],
                                               ["O","X","O","O","O","X"],
                                               ["X","O","X","O","X","O"]]) == True

def test_lose_diagonally_from_right_side():
    assert check_diagonal_win_from_right_side([[".",".",".",".",".","."],
                                               [".",".",".",".",".","."], 
                                               [".",".",".",".",".","."], 
                                               [".",".",".",".",".","O"],
                                               [".",".",".",".","O","."],
                                               [".",".",".",".",".","."],
                                               [".",".","O",".",".","."]]) == False


if __name__ == "__main__":
    main.pytest()
